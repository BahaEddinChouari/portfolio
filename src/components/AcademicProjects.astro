---
import Section from "./Section.astro";

interface AcademicProjectProps {
  name: string;
  description: string;
  year: string;
  tech: string[];
}

interface Props {
  academicProjects: AcademicProjectProps[];
  title?: string;
}

const { academicProjects, title } = Astro.props as Props;
const sortedProjects = [...academicProjects].sort((a, b) => parseInt(b.year) - parseInt(a.year));
---

<Section text={title ?? "Academic Projects"} href="academic-projects">
  <div class="space-y-8">
    {
      sortedProjects.map((project) => (
        <div class="group relative rounded-2xl border border-neutral/20 bg-gradient-to-br from-[#0b0f14] to-[#0f141b] p-6 ring-1 ring-transparent transition-all hover:border-primary/50 hover:shadow-[0_10px_60px_rgba(87,85,255,0.12)] hover:ring-primary/20">
            <span aria-hidden="true" class="pointer-events-none absolute -right-10 -top-10 h-28 w-28 rounded-full bg-primary/20 blur-2xl opacity-0 transition-opacity group-hover:opacity-100"></span>
          <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between">
            <h3 class="font-serif text-xl font-medium text-primary">{project.name}</h3>
            <span class="mt-1 inline-block rounded-full border border-neutral/20 px-3 py-1 text-sm text-neutral sm:mt-0">
              {project.year}
            </span>
          </div>
          <p class="mt-3 text-neutral">{project.description}</p>
          {project.tech && project.tech.length > 0 && (
            <div class="mt-4">
              <div class="flex flex-wrap gap-2">
                {project.tech.map((t) => (
                  <span class="rounded-full border border-neutral/20 px-3 py-1 text-sm text-neutral">
                    {t}
                  </span>
                ))}
              </div>
            </div>
          )}
        </div>
      ))
    }
  </div>
</Section>